# ContentMind Platform - Docker Compose配置
version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: contentmind-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: content_mind_dev
      MYSQL_USER: contentmind
      MYSQL_PASSWORD: contentmind123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - contentmind-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: contentmind-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf
    networks:
      - contentmind-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: contentmind-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: contentmind
      RABBITMQ_DEFAULT_PASS: contentmind123
      RABBITMQ_DEFAULT_VHOST: /contentmind
    ports:
      - "5672:5672"   # AMQP端口
      - "15672:15672" # 管理界面端口
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - contentmind-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 30s
      retries: 3

  # Elasticsearch搜索引擎
  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: contentmind-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - contentmind-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cat/health"]
      timeout: 30s
      retries: 5

  # ContentMind应用
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    image: contentmind-platform:latest
    container_name: contentmind-app
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:mysql://mysql:3306/content_mind_dev?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
      - DB_USERNAME=contentmind
      - DB_PASSWORD=contentmind123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=contentmind
      - RABBITMQ_PASSWORD=contentmind123
      - RABBITMQ_VHOST=/contentmind
      - ELASTICSEARCH_URIS=http://elasticsearch:9200
    ports:
      - "8080:8080"
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - contentmind-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/actuator/health"]
      timeout: 30s
      retries: 5
      start_period: 60s

  # Nginx反向代理
  nginx:
    image: nginx:1.24-alpine
    container_name: contentmind-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - contentmind-network
    depends_on:
      app:
        condition: service_healthy

# 网络配置
networks:
  contentmind-network:
    driver: bridge

# 数据卷配置
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  elasticsearch_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local